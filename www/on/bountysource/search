"""Search Bountysource issues
"""
from urlparse import parse_qs

import requests
from aspen import log, Response
from gittip.elsewhere import bountysource

# ========================== ^L

request.redirect('/')

# github_account, twitter_account, bitbucket_account, bountysource_account = user.get_accounts_elsewhere()
# 
# query = qs.get('query', None)
# search_url = "%s#search?query=%s" % (bountysource.BASE_WWW_URL, query)
# 
# if bountysource_account:
#     request.redirect(search_url)
# else:
#     # return auth URL with search URL as the callback
#     auth_url = bountysource.oauth_url(website, participant, search_url)
#     request.redirect(auth_url)
    
# ========================== ^L text/plain
